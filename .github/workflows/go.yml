name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    container: golang:latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: phosphorite
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14

    - name: Build
      run: go build -v .
      env:
        GO111MODULE: on

    - name: Notify Discord
      uses: Sniddl/discord-commits@v1.3
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: "${{ secrets.DISCORD_MENTION }}: **{{ github.context.payload.repository.owner.name }}/{{ github.context.payload.repository.name}}**.\nDiff: {{ github.context.payload.compare }}"
        embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
        last-commit-only: true

    - name: Test
      run: go test -v .
      env:
        GO111MODULE: on
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        PHO_PG_HOST: postgres
        PHO_PG_PORT: 5432
